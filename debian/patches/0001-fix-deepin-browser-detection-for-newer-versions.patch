From 3f66c9c6aab372aff1b6a8584cceb5bb5dd77b54 Mon Sep 17 00:00:00 2001
From: dengbo <dengbo@deepin.org>
Date: Wed, 20 Aug 2025 11:31:47 +0800
Subject: [PATCH 1/2] fix: deepin browser detection for newer versions

The script now checks for the existence of the
`get_browser_mime` function before attempting to use the
`com.deepin.daemon.Mime.GetDefaultApp` method. This is because newer
versions of Deepin no longer expose the `GetDefaultApp` method. If
`get_browser_mime` exists, it is used to determine the default browser;
otherwise, the older method is used as a fallback. This change ensures
compatibility with both older and newer versions of Deepin.

Influence:
1. Verify browser detection in Deepin versions before and after version
23.
2. Confirm that the correct browser is detected and set as default in
both scenarios.
3. Test the script with Deepin systems that have no default browser set.
---
 scripts/xdg-settings.in | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

--- xdg-utils-1.2.1.orig/scripts/xdg-settings.in
+++ xdg-utils-1.2.1/scripts/xdg-settings.in
@@ -283,8 +283,20 @@ set_browser_kde()
 
 read_deepin_browser()
 {
-    dbus-send --print-reply=literal --dest=com.deepin.daemon.Mime /com/deepin/daemon/Mime com.deepin.daemon.Mime.GetDefaultApp string:"x-scheme-handler/http" | jq -r '.Id'
-}
+    # since deepin 23, there is no GetDefaultApp method, we use mime to read
+    ret="$(get_browser_mime "x-scheme-handler/http")"
+    if [ -z "$ret" ]; then
+        # older deepin versions
+        dbus-send --print-reply=literal --dest=com.deepin.daemon.Mime /com/deepin/daemon/Mime com.deepin.daemon.Mime.GetDefaultApp string:"x-scheme-handler/http" | jq -r '.Id'
+        if [ $? -ne 0 ]; then
+            exit_failure_operation_failed
+        else
+            exit_success
+        fi
+    fi
+
+    echo "$ret"
+}
 
 get_browser_deepin()
 {
